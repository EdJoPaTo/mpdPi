---
- hosts: all
  become: true
  handlers:
    - name: Restart shairport-sync
      ansible.builtin.systemd:
        name: shairport-sync.service
        state: restarted
  tasks:
    - name: Install apt packages
      ansible.builtin.apt:
        update_cache: true
        state: present
        name:
          - mpd
          - mpc
          - shairport-sync

    - name: Disable mpd for root
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - mpd.service
        - mpd.socket

    - name: Install mpd-internetradio-destuck (aarch64)
      when: ansible_architecture == 'aarch64'
      ansible.builtin.apt:
        deb: https://github.com/EdJoPaTo/mpd-internetradio-destuck/releases/download/v0.2.6/mpd-internetradio-destuck-v0.2.6-aarch64-unknown-linux-gnu.deb
        state: present

    - name: Copy shairport scripts
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /usr/local/share/mpd-pi/
        owner: root
        group: root
        mode: u=rwx,go=rx
      loop:
        - shairport-begins.sh
        - shairport-ends.sh
    - name: Copy shairport-sync config
      notify: Restart shairport-sync
      ansible.builtin.copy:
        src: shairport-sync.conf
        dest: /etc/shairport-sync.conf
        owner: root
        group: root
        mode: u=rw,go=r

    - name: Enable services for root
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
      loop:
        - mpd-internetradio-destuck.service
        - shairport-sync.service

- hosts: all
  handlers:
    - name: Restart mpd
      ansible.builtin.systemd:
        name: mpd.service
        state: restarted
        scope: user
      environment:
        XDG_RUNTIME_DIR: /run/user/{{ ansible_user_uid }}
  tasks:
    - name: Ensure directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: u=rwX,go=
      loop:
        - .cache/
        - .cache/mpd/
        - .config/
        - .config/mpd/
        - .config/mpd/playlists/
        - .config/systemd/
        - .config/systemd/user/
        - .local/
        - .local/share/
        - .local/share/mpd-pi/
        - Music/

    - name: Copy mpd config
      notify: Restart mpd
      ansible.builtin.copy:
        src: mpd.conf
        dest: .config/mpd/
        mode: u=rw,go=

    - name: Create Chillout playlist
      ansible.builtin.copy:
        dest: .config/mpd/playlists/Chillout.m3u
        mode: u=rw,go=
        content: |
          https://hirschmilch.de:7501/chillout.mp3
          http://hirschmilch.de:7000/chillout.mp3
    - name: Create OrganicHouse playlist
      ansible.builtin.copy:
        dest: .config/mpd/playlists/OrganicHouse.m3u
        mode: u=rw,go=
        content: |
          https://hirschmilch.de:7501/organic-house.mp3
          http://hirschmilch.de:7000/organic-house.mp3

    - name: Copy mpd-restart.sh
      ansible.builtin.copy:
        src: mpd-restart.sh
        dest: .local/share/mpd-pi/
        mode: u=rwx,go=

    - ansible.builtin.import_tasks: tasks/oneshot-timer.yml
      vars:
        unit: mpd-restart
        exec: "%h/.local/share/mpd-pi/mpd-restart.sh"
        timer: |
          OnCalendar=*-*-* 04:30:00
          RandomizedDelaySec=1min
    - ansible.builtin.import_tasks: tasks/oneshot-timer.yml
      vars:
        unit: mpd-middag
        exec: /usr/bin/mpc pause
        timer: |
          OnCalendar=*-*-* 11:55:00
          RandomizedDelaySec=1min
    - ansible.builtin.import_tasks: tasks/oneshot-timer.yml
      vars:
        unit: mpd-nighttime
        exec: /usr/bin/mpc volume -q 15
        timer: |
          OnCalendar=*-*-* 21:00:00
          RandomizedDelaySec=1min

    - name: Ensure mpd service is enabled
      ansible.builtin.systemd:
        name: mpd.service
        enabled: true
        scope: user
      environment:
        XDG_RUNTIME_DIR: /run/user/{{ ansible_user_uid }}

    - name: Enable linger
      ansible.builtin.command:
        cmd: loginctl enable-linger
        creates: /var/lib/systemd/linger/{{ ansible_user_id }}
